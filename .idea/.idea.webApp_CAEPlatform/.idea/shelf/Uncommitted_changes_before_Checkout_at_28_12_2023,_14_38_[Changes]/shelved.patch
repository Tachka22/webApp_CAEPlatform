Index: webApp_CAEPlatform/infrastructure/ExecuteScript.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Diagnostics;\n\nnamespace webApp_CAEPlatform.infrastructure;\n\npublic class ExecuteScript\n{\n    \n    #region Пути к файлам логирования терминала\n    private const string pathTo_TerminalLogs = \"/home/vlad/Documents/csharp/webApp_CAEPlatform/webApp_CAEPlatform/logs/TerminalOutput.txt\";\n    #endregion\n    #region Пути к исполняемым файлам.\n    /// <summary>\n    /// Скрипт запуска решателя.\n    /// </summary>\n    private const string pathTo_RunSolverScript = \"/home/vlad/Documents/csharp/webApp_CAEPlatform/webApp_CAEPlatform/bashScripts/RunSolver.sh\";\n    /// <summary>\n    /// Скрипт очистки прошлых решений.\n    /// </summary>\n    private const string pathTo_ClearLastSolutionScript = \"/home/vlad/Documents/csharp/webApp_CAEPlatform/webApp_CAEPlatform/bashScripts/ClearLastSolutions.sh\";\n    /// <summary>\n    /// Скрипт создания сетки модели.\n    /// </summary>\n    private const string pathTo_CreateMesh = \"/home/vlad/Documents/csharp/webApp_CAEPlatform/webApp_CAEPlatform/bashScripts/CreateMesh.sh\";\n    /// <summary>\n    /// Скрипт запуска приложения: \"ParaView Desktop\"\n    /// </summary>\n    private const string pathTo_OpenParaViewDesktop = \"/home/vlad/Documents/csharp/webApp_CAEPlatform/webApp_CAEPlatform/bashScripts/OpenParaView.sh\";\n    #endregion\n    \n    private Process myProcess;\n    \n    /// <summary>\n    /// Открыть ParaView desktop.\n    /// </summary>\n    public async Task RunOpenParaViewDesktop()\n    {\n        await ExecuteScriptBase(pathTo_OpenParaViewDesktop);\n    }\n    /// <summary>\n    /// Очистить прошлые решения.\n    /// </summary>\n    public async Task ClearLastSolutions()\n    {\n        await ExecuteScriptBase(pathTo_ClearLastSolutionScript);\n    }\n    /// <summary>\n    /// Запустить решатель.\n    /// </summary>\n    public async Task RunSolver()\n    {\n        await ExecuteScriptBase(pathTo_RunSolverScript);\n    }\n    /// <summary>\n    /// Создать сетку.\n    /// </summary>\n    public async Task CreateMesh()\n    {\n        await ExecuteScriptBase(pathTo_CreateMesh);\n    }\n    /// <summary>\n    /// Отмена выполнения.\n    /// </summary>\n    public void CancelRun()\n    {\n        //TODO:Написать скрипт отмены операции\n    }\n    \n    /// <summary>\n    /// Базовый метод исполнения скриптов.\n    /// </summary>\n    /// <param name=\"path\">скрипт</param>\n    private async Task ExecuteScriptBase(string path)\n    {\n        try\n        {\n            if (path == string.Empty)\n                throw new Exception(\"path not found\");\n            \n            using (myProcess = new Process())\n            {\n                myProcess.StartInfo = new ProcessStartInfo\n                {\n                    FileName = path,\n                    RedirectStandardOutput = true,\n                    RedirectStandardInput = true,\n                    RedirectStandardError = true,\n                    UseShellExecute = false\n                };\n                myProcess.OutputDataReceived += ProcessOnOutputDataReceived;\n                myProcess.EnableRaisingEvents = true;  \n                myProcess.Start();\n                myProcess.BeginOutputReadLine();\n                myProcess.BeginErrorReadLine();\n                await myProcess.WaitForExitAsync();\n            }\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n    }\n    /// <summary>\n    /// Запись вывода терминала.\n    /// </summary>\n    /// <param name=\"sender\"></param>\n    /// <param name=\"e\"></param>\n    private void ProcessOnOutputDataReceived(object sender, DataReceivedEventArgs e)\n    {\n        using var writer = new StreamWriter(pathTo_TerminalLogs, true);\n        var outLine = e.Data;\n        writer.WriteLine(outLine);\n        Console.WriteLine(outLine);\n    }\n}
===================================================================
diff --git a/webApp_CAEPlatform/infrastructure/ExecuteScript.cs b/webApp_CAEPlatform/infrastructure/ExecuteScript.cs
--- a/webApp_CAEPlatform/infrastructure/ExecuteScript.cs	
+++ b/webApp_CAEPlatform/infrastructure/ExecuteScript.cs	
@@ -62,7 +62,7 @@
     /// </summary>
     public void CancelRun()
     {
-        //TODO:Написать скрипт отмены операции
+        
     }
     
     /// <summary>
